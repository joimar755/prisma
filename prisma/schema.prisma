// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  //provider = "prisma-client-js"
  provider  = "prisma-client-py"
  interface = "asyncio"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://control_hty2_user:8hlMf9vMThXSOkD59kpQnl8YjvOp0ooC@dpg-cti3l856l47c738ep7ag-a.oregon-postgres.render.com:5432/control_hty2"
}

model Users {
  id       Int    @id @default(autoincrement())
  name     String @unique
  email    String @unique
  password String
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String    @unique
  price       Int
  Stock       Int
  category    Category? @relation(fields: [category_id], references: [id])
  category_id Int
  detalles    Detalle[]

  @@index([category_id])
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  products    Product[]
}

model Venta {
  id       Int       @id @default(autoincrement())
  detalles Detalle[]
  total    Float
  createdAt DateTime @default(now())
}

model Detalle {
  id         Int      @id @default(autoincrement())
  cantidad   Float
  Subtotal   Float
  product    Product  @relation(fields: [product_id], references: [id])
  product_id Int
  ventaId    Int
  venta      Venta    @relation(fields: [ventaId], references: [id])
  createdAt  DateTime @default(now())
  @@index([ventaId], name: "ventaId")
}
