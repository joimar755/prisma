// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider             = "prisma-client-py"
  recursive_type_depth = 5
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id                 Int                  @id @default(autoincrement())
  name               String               @unique
  password           String
  role               Role                 @default(distribuidor)
  almacenes          Almacen[]
  Pedidos_Fabricante Pedidos_Fabricante[]
}

model Product {
  id                 Int                  @id @default(autoincrement())
  name               String               @unique
  description        String               @unique
  price              Int
  Stock              Int
  category           Category?            @relation(fields: [category_id], references: [id])
  category_id        Int
  detalles           Detalle[]
  Pedidos_Fabricante Pedidos_Fabricante[]
  envio              envio[]

  @@index([category_id])
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  products    Product[]
}

model Venta {
  id        Int       @id @default(autoincrement())
  detalles  Detalle[]
  total     Float
  createdAt DateTime  @default(now())
}

model Detalle {
  id         Int      @id @default(autoincrement())
  cantidad   Float
  Subtotal   Float
  product    Product  @relation(fields: [product_id], references: [id])
  product_id Int
  ventaId    Int
  venta      Venta    @relation(fields: [ventaId], references: [id])
  createdAt  DateTime @default(now())

  @@index([ventaId], name: "ventaId")
}

model envio {
  id          Int      @id @default(autoincrement())
  alamacen_id Int
  alamacen    Almacen  @relation(fields: [alamacen_id], references: [id])
  product     Product  @relation(fields: [product_id], references: [id])
  product_id  Int
  cantidad    String
  createdAt   DateTime @default(now())
}

model Pedidos_Fabricante {
  id         Int      @id @default(autoincrement())
  nombre     String
  direccion  String
  cantidad   Float
  product    Product  @relation(fields: [product_id], references: [id])
  product_id Int
  user       Users    @relation(fields: [user_id], references: [id])
  user_id    Int
  telefono   String
  fecha      DateTime @default(now())
  total      Float
}

model Almacen {
  id          Int     @id @default(autoincrement())
  nombre      String
  direccion   String
  descripcion String
  user        Users   @relation(fields: [user_id], references: [id])
  user_id     Int
  envio       envio[]
}

enum Role {
  distribuidor
  almacen
  fabricante
}
